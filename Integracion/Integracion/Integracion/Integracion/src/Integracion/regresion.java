/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Integracion;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.nfunk.jep.ParseException;

/**
 *
 * @author jam
 */
public final class regresion extends javax.swing.JFrame {

  /**
   * Creates new form regresion
   */
  ArrayList x;
  ArrayList y;
  private Funcion fun;
  
  public regresion() {
    initComponents();
    setLocationRelativeTo(null);
    llenar();
  }
  
  public void llenar(){
    boolean seguir = true;
    x = new ArrayList();
    y = new ArrayList();
    while(seguir){
      String val = JOptionPane.showInputDialog(null, "Ingrese el siguiente valor de X");
      if(!val.equalsIgnoreCase("fin")){
        x.add(new Double(val));
      }
      else
        seguir = false;
    }
    for (int i = 0; i < x.size(); i++) {
      String val = JOptionPane.showInputDialog(null, "Ingrese el valor de Y(" + x.get(i) + ")");
      y.add(new Double(val));
    }
    String[] col = new String[x.size()+1];
    Object[][] data = new String[2][x.size()+1];
    data[0][0] = "X";
    data[1][0] = "Y";
    col[0]="";
    for (int i = 0; i < x.size(); i++) {
      col[i+1] = Integer.toString(i);
      data[0][i+1] = x.get(i).toString();
      data[1][i+1] = y.get(i).toString();
    }
    DefaultTableModel dt = new DefaultTableModel(data,col);
    datos.setModel(dt);
    grado.removeAllItems();
    for (int i = 2; i < col.length-1; i++)
      grado.addItem(i);
  }
  
  public double[][] matriz(int n){
    double[][] ret = new double[n+1][n+2];
    for (int i = 0; i <= n; i++) {
      for (int j = 0; j <= n+1; j++) {
        ret[i][j] = 0;
        if(j == n+1){
          for (int k = 0; k < y.size(); k++) {
            ret[i][j] += Double.parseDouble(y.get(k).toString())*Math.pow(Double.parseDouble(x.get(k).toString()), i);
          }
        }else{
          for (int k = 0; k < x.size(); k++) {
            ret[i][j] += Math.pow(Double.parseDouble(x.get(k).toString()), j+i);
          }
        }
      }
    }
    return ret;
  }
  
  public double[] factorizar(double ma[][]){
    double[][] l = new double[ma.length][ma.length];
    double[][] u = new double[ma.length][ma.length];
    for (int i = 0; i < ma.length; i++) {
      for (int j = 0; j < ma.length; j++) {
        double sum = 0;
	for (int k = 0; k < i; k++) {
          sum += (l[i][k])*(u[k][j]);
        }
	u[i][j] = (i <= j ? (ma[i][j] - sum) : 0);
      }
      for (int j = 0; j < ma.length; j++) {
        double sum = 0;
        for (int k = 0; k < i; k++) {
          sum += (l[j][k])*(u[k][i]);
        }
	l[j][i] = (i <= j ? ((1/u[i][i])*(ma[j][i] - sum)) : 0.0);
      }
    }
    double[] Y = new double[ma.length];
    for (int i = 0; i < ma.length; i++) {
      Y[i] = 0.0;
      for (int j = 0; j < i; j++){
        Y[i] -= (l[i][j])*(Y[j]);
      }
      Y[i] += ma[i][ma.length];
    }
    double[] X = new double[ma.length];
    for (int i = ma.length-1; i >= 0; i--) {
      X[i] = 0;
      for (int j = i+1; j < ma.length; j++) {
        X[i] -= (u[i][j])*(X[j]);
      }
      X[i] += Y[i];
      X[i] = (X[i]/u[i][i]);
    }
    return X;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        salida = new javax.swing.JTextArea();
        Aceptar = new javax.swing.JButton();
        Limpiar = new javax.swing.JButton();
        Salir = new javax.swing.JButton();
        grado = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        datos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        salida.setColumns(20);
        salida.setEditable(false);
        salida.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        salida.setRows(5);
        jScrollPane1.setViewportView(salida);

        Aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Integracion/aceptar.png"))); // NOI18N
        Aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptarActionPerformed(evt);
            }
        });

        Limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Integracion/limpiar.png"))); // NOI18N
        Limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimpiarActionPerformed(evt);
            }
        });

        Salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Integracion/salir.png"))); // NOI18N
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        grado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Grado de Polinomio");

        datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"X", "", null, null},
                {"Y", null, null, null}
            },
            new String [] {
                "", "Title 2", "Title 3", "Title 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        datos.setEnabled(false);
        jScrollPane2.setViewportView(datos);
        datos.getColumnModel().getColumn(0).setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(grado, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(241, 241, 241)
                        .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(grado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Salir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
    System.exit(0);
  }//GEN-LAST:event_SalirActionPerformed

  private void LimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimpiarActionPerformed
    grado.removeAllItems();
    salida.setText("");
    llenar();
  }//GEN-LAST:event_LimpiarActionPerformed

  private void AceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptarActionPerformed
    int n = Integer.parseInt(grado.getSelectedItem().toString());
    double[][] ma = matriz(n);
    double[] res = factorizar(ma);
    String ret="";
    for (int i = 0; i < res.length; i++) {
      if(i==0)
        ret += String.format("%.4f", res[i]);
      else
        if(i==1)
          ret += String.format(" %s %.4fx", (res[i]>=0?"+":"-") , Math.abs(res[i]));
      else
          ret += String.format(" %s %.4fx^%d", (res[i]>=0?"+":"-") , Math.abs(res[i]), i);
    }
    fun = new Funcion(ret);
    ret = "Y(x) ≈ " + ret;
    String me = JOptionPane.showInputDialog(null, "Desea Evaluar un punto? si/no","si");
    if(me.equalsIgnoreCase("si")){
      String ev = JOptionPane.showInputDialog(null, "Ingrese el punto a evaluar o fin para terminar");
      while(!ev.equalsIgnoreCase("fin")){
        try {
          ret+=String.format("\nY(%s) ≈ %.4f", ev, fun.Evaluar(Double.parseDouble(ev)));
        } catch (ParseException ex) {
          JOptionPane.showMessageDialog(null, "Función Incorrecta!", "Error", 0);
        }
        ev = JOptionPane.showInputDialog(null, "Ingrese el punto a evaluar o fin para terminar");
      }
    }
    salida.setText(ret);
  }//GEN-LAST:event_AceptarActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the
     * default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(regresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(regresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(regresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(regresion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable() {

      public void run() {
        new regresion().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Aceptar;
    private javax.swing.JButton Limpiar;
    private javax.swing.JButton Salir;
    private javax.swing.JTable datos;
    private javax.swing.JComboBox grado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea salida;
    // End of variables declaration//GEN-END:variables
}
